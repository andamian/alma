import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'war'
}

repositories {
    mavenLocal()
    jcenter()

    // To obtain access to the Oracle Maven repository, put your credentials into environment variables:
    // - ALMA_MAVEN_USERNAME
    // - ALMA_MAVEN_PASSWORD
    //
    // or, create a gradle.properties in your ~/.gradle directory with the following variables set:
    // - almaMavenUsername
    // - almaMavenPassword
    maven {
        name 'alma-central'
        url 'https://maven-repo.hq.eso.org/artifactory/ALMA'
        credentials {
            username = System.getenv("ALMA_MAVEN_USERNAME") ?: almaMavenUsername
            password = System.getenv("ALMA_MAVEN_PASSWORD") ?: almaMavenPassword
        }
    }
}

group = 'org.opencadc'
sourceCompatibility = 1.8
version = '1.1.0'

ext {
    default_app_name = 'soda'
}

war {
    if (project.hasProperty('alma_soda_app_name')) {
        eachFile {
            if (it.name.equals('capabilities.xml') || it.name.equals('service.json')) {
                filter(ReplaceTokens, tokens: [app_name: project.alma_soda_app_name])
            }
        }
        archiveName = project.alma_soda_app_name + '##' + project.version + '.war'
    } else {
        eachFile {
            if (it.name.equals('capabilities.xml') || it.name.equals('service.json')) {
                filter(ReplaceTokens, tokens: [app_name: project.default_app_name])
            }
        }
        archiveName = project.default_app_name + '##' + project.version + '.war'
    }

    // Include the swagger-ui so that /soda provides the soda API documentation
    from('../') {
        include 'swagger-ui/'
    }
}

configurations {
    intTestImplementation.extendsFrom testImplementation
    intTestRuntime.extendsFrom testRuntime
}

dependencies {
    implementation 'org.opencadc:alma-lib:[1.0.0,)'
    implementation 'org.opencadc:cadc-dali:[1.1.3,)'
    implementation 'org.opencadc:cadc-soda-server:[1.0,)'

    testImplementation 'junit:junit:[4.12,)'
    testImplementation 'org.mockito:mockito-core:[2.28,)'
    testImplementation 'org.opencadc:cadc-test-uws:[1.1.1,)'
    testImplementation 'org.opencadc:cadc-test-vosi:[1.0.2,)'

    intTestImplementation 'org.opencadc:cadc-test-uws:[1.1.1,)'
    intTestImplementation 'org.opencadc:cadc-test-vosi:[1.0.2,)'
}

sourceSets {
    intTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/intTest/java')
        }

        // set the intTest resource directory
        resources.srcDir file('src/intTest/resources')
    }
}

tasks.withType(Test) {
    // Reset the report destinations so that intTests go to their own page
    reports.html.destination = file(reporting.baseDir.getAbsolutePath() + '/' + name)

    // Assign all Java system properties from the command line to the tests
    systemProperties System.properties as Map<String, ?>
}

task intTest(type: Test) {
    // set the configuration context
    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath

    // run the tests always
    outputs.upToDateWhen { false }
}
