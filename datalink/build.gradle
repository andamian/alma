import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'war'
}

repositories {
    mavenCentral()
    mavenLocal()
}

group = 'org.opencadc'
sourceCompatibility = 1.8
version = '1.3.2'

ext {
    default_app_name = 'datalink'
}

war {
    if (project.hasProperty('alma_datalink_app_name')) {
        eachFile {
            if (it.name.equals('capabilities.xml') || it.name.equals('service.json')) {
                filter(ReplaceTokens, tokens: [app_name: project.alma_datalink_app_name])
            }
        }
        archiveName = project.alma_datalink_app_name + '##' + project.version + '.war'
    } else {
        eachFile {
            if (it.name.equals('capabilities.xml') || it.name.equals('service.json')) {
                filter(ReplaceTokens, tokens: [app_name: project.default_app_name])
            }
        }
        archiveName = project.default_app_name + '##' + project.version + '.war'
    }

    // Include the swagger-ui so that /datalink provides the DataLink API documentation
    from('../') {
        include 'swagger-ui/'
    }
}

configurations {
    intTestImplementation.extendsFrom testImplementation
    intTestRuntime.extendsFrom testRuntime
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j-core:[2.15.0,3.0)'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:[2.15.0,3.0)'
    implementation 'org.opencadc:alma-lib:[1.3.4,2.0)'
    implementation 'org.json:json:20210307'
    implementation 'org.opencadc:cadc-util:[1.3.7,2.0)'
    implementation 'org.opencadc:cadc-datalink-server:[1.0.2,1.1.0)'

    testImplementation 'junit:junit:[4.13,5)'
    testImplementation 'org.mockito:mockito-core:[3.3.3,4)'
    testImplementation 'org.opencadc:cadc-test-uws:[1.2.2,1.3)'
    testImplementation 'org.opencadc:cadc-test-vosi:[1.0.2,1.2)'
}

sourceSets {
    intTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/intTest/java')
        }

        // set the intTest resource directory
        resources.srcDir file('src/intTest/resources')
    }
}

tasks.withType(Test) {
    // Reset the report destinations so that intTests go to their own page
    reports.html.destination = file(reporting.baseDir.getAbsolutePath() + '/' + name)

    // Assign all Java system properties from the command line to the tests
    systemProperties System.properties as Map<String, ?>
}

task intTest(type: Test) {
    // set the configuration context
    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath

    // run the tests always
    outputs.upToDateWhen { false }
}
