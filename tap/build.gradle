import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'war'
}

repositories {
    mavenCentral()
    mavenLocal()
}

apply from: '../properties.gradle'

war {
    eachFile {
        if (it.name.equals('capabilities.xml') || it.name.equals('service.json')) {
            filter(ReplaceTokens, tokens: [app_name: 'tap', version: version])
        }
    }
    archiveName 'tap.war'

    manifest {
        attributes "Implementation-Version": version
        attributes "Implementation-Title": "TAP"
    }

    // Include the swagger-ui so that /tap provides the TAP API documentation
    from('../') {
        include 'swagger-ui/'
    }
}

configurations {
    intTestImplementation.extendsFrom testImplementation
    intTestRuntime.extendsFrom testRuntime

    // Ensure only local files are available to prevent collisions.
    implementation.exclude group: 'uk.ac.starlink'
}

dependencies {
    implementation 'com.oracle.ojdbc:ojdbc8:19.3.0.0'
    implementation 'org.opencadc:alma-lib:' + version
    implementation 'org.opencadc:cadc-adql:[1.1,)'
    implementation 'org.opencadc:cadc-dali:[1.2.14,1.3.0)'
    implementation 'org.opencadc:cadc-log:[1.1.5,1.2.0)'
    implementation 'org.opencadc:cadc-rest:[1.3.11,1.4.0)'
    implementation 'org.opencadc:cadc-tap-server:[1.1.19,2.0)'
    implementation 'org.opencadc:cadc-tap-server-oracle:[1.2.9,1.3.0)'
    implementation 'org.opencadc:cadc-tap-tmp:[1.0.0,1.1.0)'
    implementation 'org.opencadc:cadc-util:[1.6.1,1.7.0)'
    implementation 'org.opencadc:cadc-uws:[1.0.5,1.1.0)'
    implementation 'org.opencadc:cadc-uws-server:[1.2.14,1.3.0)'
    implementation 'org.opencadc:cadc-vosi:[1.4.3,2.0)'

    runtimeOnly 'org.opencadc:cadc-registry:[1.5.9,2.0)'

    testImplementation 'junit:junit:[4.13,5.0)'
    testImplementation 'org.mockito:mockito-core:[3.9,4.0)'
    testImplementation 'org.opencadc:cadc-test-uws:[1.2.2,)'
    testImplementation 'org.opencadc:cadc-test-vosi:[1.0.2,)'
    testImplementation 'org.opencadc:cadc-test-tap:[1.1,)'
}

sourceSets {
    intTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/intTest/java')
        }
    }
}

tasks.withType(Test) {
    // Reset the report destinations so that intTests go to their own page
    reports.html.destination = file(reporting.baseDir.getAbsolutePath() + '/' + name)

    // Assign all Java system properties from the command line to the tests
    systemProperties System.properties as Map<String, ?>
}

task intTest(type: Test) {
    // set the configuration context
    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath

    // run the tests always
    outputs.upToDateWhen { false }
}
