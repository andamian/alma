build_data:
  stage: build
  image: gradle:jdk11
  script:
    - cd data && ../gradlew -i clean build test

build_datalink:
  stage: build
  image: gradle:jdk11
  script:
    - cd alma-lib && ../gradlew -i clean build test publishToMavenLocal
    - cd ../datalink && ../gradlew -i clean build test

build_obscore:
  stage: build
  image: gradle:jdk11
  script:
    - cd obscore && ../gradlew -i clean build test

build_reg:
  stage: build
  image: gradle:jdk11
  script:
    - cd reg && ../gradlew -i clean build test

build_sia:
  stage: build
  image: gradle:jdk11
  script:
    - cd sia && ../gradlew -i clean build test

build_soda:
  stage: build
  image: gradle:jdk11
  artifacts:
    paths:
      - soda/build
  script:
    - cd alma-lib && ../gradlew -i clean build test publishToMavenLocal
    - cd ../soda && ../gradlew -i clean build test

deploy_soda:
  stage: deploy
  image: docker:latest
  needs:
    - build_soda
  services:
    - docker:dind
  before_script:
    - echo "${CI_REGISTRY_PASSWORD}" | docker login -u "${CI_REGISTRY_USER}" --password-stdin ${CI_REGISTRY}
  script:
    - ls -alh
    - cd soda
    - ls -alh
    - export VERSION=$(cat VERSION)
    - echo "Using Version ${VERSION}"
    - docker build --no-cache --pull --network host -t ${CI_REGISTRY_ORGANIZATION}/alma-soda:${VERSION} .
    - docker push ${CI_REGISTRY_ORGANIZATION}/alma-soda:${VERSION}